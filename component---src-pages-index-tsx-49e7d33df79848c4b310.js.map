{"version":3,"file":"component---src-pages-index-tsx-49e7d33df79848c4b310.js","mappings":"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","sources":["webpack://ca/./src/components/homeGrid.tsx","webpack://ca/./src/hooks/useSiteMetadata.tsx","webpack://ca/./src/components/seo.tsx","webpack://ca/./src/pages/index.tsx"],"sourcesContent":["import styled from \"@emotion/styled\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby-link\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\nimport { PostsIndexQueryResult } from \"../queries/queries\"\nimport HGroup from \"./hgroup\"\nimport VGroup from \"./vgroup\"\n\nconst GridContainer = styled(\"div\")`\n  \n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 40px;\n  flex-grow: 1;\n  \n  @media (min-width: 768px) { /* Tablet and up */\n    gap: 20px;\n  }\n\n  @media (min-width: 1024px) { /* Large devices and up */\n    gap: 30px;\n  }\n`\n\nconst Card = styled(\"div\")`\n\n  page-break-inside: avoid;\n  break-inside: avoid;\n  box-sizing: border-box;\n  display: inline-block; \n  max-width: 500px;\n  \n  border-radius: 18px; //12px 12px 8px 8px;\n\n  box-shadow: 0 1px 3px rgba(0,0,0,0.06), 0 1px 2px rgba(0,0,0,0.14);\n  transition: all 0.3s cubic-bezier(.25,.8,.25,1);\n\n  &:hover {\n    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n  }\n`\n\nconst CardText = styled(\"div\")`\n  color: inherit;\n  padding: 12px;\n  color: inherit;\n  text-decoration: none;\n`\n\nconst CardTitle = styled(\"div\")`\n  // color: #AAA;\n  font-size: 1.5rem;\n  font-weight: 700;\n`\n\nconst CardDesc = styled(\"div\")`\n  font-size: 1rem;\n  margin: 10px 0px 20px 0px;\n`\n\nconst PageTag = styled(\"div\")`\n  background: #AAA;\n  padding: 4px 6px;\n  color: #FFF;\n  border-radius: 4px;\n  text-transform: uppercase;\n  font-size: 0.8rem;\n`\n\nexport default function PostGrid() {\n\n  const data: PostsIndexQueryResult = useStaticQuery(POST_INDEX_QUERY)\n\n  return (\n    <VGroup style={{\n      justifyContent: \"center\",\n      alignItems: \"center\", /* Aligns grid to the top */\n      margin: \"15px\"\n    }}>\n      <GridContainer>\n        {data?.allMdx?.edges?.map(post => {\n\n          let featuredImg = getImage(post.node.frontmatter.image?.childImageSharp?.gatsbyImageData)\n\n          console.log(post.node.frontmatter.image)\n\n          return <Card key={post.node.id}>\n            <Link to={`${post.node.frontmatter.slug}`}>\n              <GatsbyImage\n                image={featuredImg} alt=\"TODO\"\n                style={{\n                  borderRadius: \"18px 18px 0px 0px\",\n                  gridArea: \"1/1\",\n                  // You can set a maximum height for the image, if you wish.\n                  // maxHeight: 600,\n                }}\n              />\n              <CardText>\n                {/* <div>{post.node.frontmatter.image}</div> */}\n                <CardTitle>{post.node.frontmatter.title}</CardTitle>\n                <CardDesc>{post.node.frontmatter.description}</CardDesc>\n                <HGroup style={{ gap: 4 }}>{post.node.frontmatter.tags.map(x => {\n                  return <PageTag>{x}</PageTag>\n                })}\n                </HGroup>\n              </CardText>\n            </Link>\n          </Card>\n        })}\n      </GridContainer>\n    </VGroup >\n  )\n}\n\n// TODO move to queries.ts when supported\nconst POST_INDEX_QUERY = graphql`\n query {\n    allMdx(sort: {frontmatter: {rank: ASC}}) {\n         edges {\n             node {\n                ...PostIndexFields\n                frontmatter {\n                    image {\n                      childImageSharp {\n                          gatsbyImageData(width: 800)\n                      }\n                    }\n                }\n             }\n         }\n     }\n }\n`  ","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\"\n\nexport const SEO = (props: Partial<{ title, description, pathname, children }>) => {\n\n    const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterUsername } = useSiteMetadata()\n\n    const { title, description, pathname, children } = props\n\n    const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        image: `${siteUrl}${image}`,\n        url: `${siteUrl}${pathname || ``}`,\n        twitterUsername,\n    }\n\n    return (\n        <>\n            <title>{seo.title}</title>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n            {/* <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            <meta name=\"twitter:title\" content={seo.title} />\n            <meta name=\"twitter:url\" content={seo.url} />\n            <meta name=\"twitter:description\" content={seo.description} />\n            <meta name=\"twitter:image\" content={seo.image} />\n            <meta name=\"twitter:creator\" content={seo.twitterUsername} /> */}\n            <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>ðŸ‘¤</text></svg>\" />\n            {children}\n        </>\n    )\n}","import styled from \"@emotion/styled\"\nimport React from \"react\"\nimport Hero from \"../components/hero\"\nimport HGroup from \"../components/hgroup\"\nimport PostGrid from \"../components/homeGrid\"\nimport { ConstrainedImageComponent } from \"../components/image\"\nimport Layout from \"../components/layout\"\nimport { SEO } from \"../components/seo\"\nimport VGroup from \"../components/vgroup\"\n\nexport const Head = () => (\n  <SEO />\n)\n\nconst AvatarContainer = styled(\"div\")`\n  \n  margin-top: -70px;\n  margin-left: 30px;\n\n  @media (min-width: 768px) { /* Tablet and up */\n    margin-top: -70px;\n    margin-left: 100px;\n  }\n\n  @media (min-width: 1024px) { /* Large devices and up */\n    margin-top: -70px;\n    margin-left: 100px;\n  }\n`\n\nconst AvatarImage = styled(\"div\")`\n  \n  width: 200px;\n  height: 200p;\n  max-width: 200px;\n  max-height: 200p;\n\n  @media (min-width: 768px) { /* Tablet and up */\n    width: 250px;\n    height: 250p;\n    max-width: 250px;\n    max-height: 250p;\n  }\n\n  @media (min-width: 1024px) { /* Large devices and up */\n    width: 250px;\n    height: 250p;\n    max-width: 250px;\n    max-height: 250p;\n  }\n`\n\nconst AvatarHeading1 = styled(\"div\")`\n  \n  font-size: 1.5rem;\n  font-weight: 700;\n\n  @media (min-width: 768px) { /* Tablet and up */\n    font-size: 2rem;\n    font-weight: 700;\n  }\n\n  @media (min-width: 1024px) { /* Large devices and up */\n    font-size: 2rem;\n    font-weight: 700;\n  }\n`\n\nconst AvatarHeading2 = styled(\"div\")`\n  \n  font-size: 1rem;\n  font-weight: 700;\n  color: #aaa;\n  letter-spacing: 0.1;\n\n  @media (min-width: 768px) { /* Tablet and up */\n  font-size: 1.5rem;\n    font-weight: 700;\n  }\n\n  @media (min-width: 1024px) { /* Large devices and up */\n  font-size: 1.5rem;\n    font-weight: 700;\n  }\n`\n\n\nfunction Avatar() {\n  return <AvatarContainer>\n    <HGroup>\n      <AvatarImage>\n        <ConstrainedImageComponent\n          imageName=\"sunset\"\n          style={{\n            borderRadius: \"50%\",\n            border: \"5px solid white\"\n          }} />\n      </AvatarImage>\n      <VGroup style={{ justifyContent: \"center\", marginTop: \"25px\", marginLeft: \"20px\" }}>\n        <AvatarHeading1>Your guide, Cebuanna</AvatarHeading1>\n        <AvatarHeading2>@cebuanna</AvatarHeading2>\n      </VGroup>\n    </HGroup>\n  </AvatarContainer>\n}\n\nexport default function IndexPage() {\n  return (\n    <Layout>\n      <VGroup>\n        <VGroup style={{ position: \"relative\" }}>\n          <Hero />\n          <Avatar />\n        </VGroup>\n        <PostGrid />\n      </VGroup>\n    </Layout>\n  )\n}\n"],"names":["GridContainer","_styled","Card","CardText","CardTitle","CardDesc","PageTag","PostGrid","data","useStaticQuery","POST_INDEX_QUERY","___EmotionJSX","VGroup","style","justifyContent","alignItems","margin","allMdx","_data$allMdx","edges","_data$allMdx$edges","map","post","featuredImg","getImage","node","frontmatter","image","_post$node$frontmatte","childImageSharp","_post$node$frontmatte2","gatsbyImageData","console","log","key","id","Link","to","slug","GatsbyImage","alt","borderRadius","gridArea","title","description","HGroup","gap","tags","x","SEO","props","defaultTitle","defaultDescription","siteUrl","twitterUsername","site","siteMetadata","pathname","children","seo","url","name","content","rel","href","Head","AvatarContainer","target","styles","AvatarImage","AvatarHeading1","AvatarHeading2","Avatar","ConstrainedImageComponent","imageName","border","marginTop","marginLeft","IndexPage","Layout","position","Hero"],"sourceRoot":""}