{"version":3,"file":"component---src-pages-index-tsx-5919969ac5c4991307b6.js","mappings":"kLAKe,SAASA,IAAc,IAAD,EAEnC,MAAMC,GAA8BC,EAAAA,EAAAA,gBAAeC,GAEnD,OACEC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,KAAAA,KACGH,SAAY,QAAR,EAAJA,EAAMI,cAAM,WAAR,EAAJC,EAAcC,MAAMC,KAAIC,IAChBL,EAAAA,EAAAA,IAAAA,KAAAA,MAAIA,EAAAA,EAAAA,IAACM,EAAAA,KAAI,CAACC,GAAE,GAAKF,EAAKG,KAAKC,YAAYC,MAASL,EAAKG,KAAKC,YAAYC,UAKvF,CAGA,MAAMX,EAAgB,aCdhBY,EAAoB,CAetB,EAGW,SAASC,EAAOC,GAC3B,OACIb,EAAAA,EAAAA,IAAAA,MAAAA,MACIA,EAAAA,EAAAA,IAACJ,EAAU,OACXI,EAAAA,EAAAA,IAACc,EAAAA,GAAW,CAACC,WAAYJ,GAAoBE,EAAMG,UAG/D,C,2FCqKe,SAASC,IACtB,OACEjB,EAAAA,EAAAA,IAACY,EAAAA,EAAM,MACLZ,EAAAA,EAAAA,IAAAA,KAAAA,KAAI,oBAGV,C,8FC1KO,MAAMkB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBJ,GAC/B,MAAMK,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfH,EACFA,EAAWK,GAGb,IAAIA,KAAsBL,IAChC,CAACK,EAAmBL,GACzB,CAGA,MAAMM,EAAc,CAAC,EAQd,SAASP,GAAY,WAACC,EAAU,SAAEC,EAAQ,qBAAEM,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfP,EACHA,EAAW,CAAC,GACZA,GAAcM,EAEJF,EAAiBJ,GAG5B,gBACLG,EAAWM,SACX,CAACC,MAAOF,GACRP,EAEJ,C","sources":["webpack://ca/./src/components/navigation.tsx","webpack://ca/./src/components/layout.tsx","webpack://ca/./src/pages/index.tsx","webpack://ca/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import { Link } from \"@reach/router\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { PostsIndexQueryResult } from \"../queries/queries\"\n\nexport default function Navigation() {\n\n  const data: PostsIndexQueryResult = useStaticQuery(POST_INDEX_QUERY)\n\n  return (\n    <>\n      <ul>\n        {data?.allMdx?.edges.map(post => {\n          return <li><Link to={`${post.node.frontmatter.slug}`}>{post.node.frontmatter.slug}</Link></li>\n        })}\n      </ul>\n    </>\n  )\n}\n\n// TODO move to queries.ts when supported\nconst POST_INDEX_QUERY = graphql`\n query {\n     allMdx(sort: { fields: [frontmatter___date], order: ASC }) {\n         edges {\n             node {\n                 ...PostIndexFields\n             }\n         }\n     }\n }\n`\n","import { MDXProvider } from \"@mdx-js/react\"\nimport React from \"react\"\nimport Navigation from \"./navigation\"\n\n// TODO common renders\n// const markdownRenderers = {}\n\nconst markdownRenderers = {\n    // h1: (props: any) => (\n    //     <h1 style={{ fontSize: \"60px\", fontWeight: \"bold\" }} {...props} />\n    // ),\n    // h2: (props: any) => (\n    //     <h2 style={{ fontSize: \"60px\", fontWeight: \"bold\" }} {...props} />\n    // ),\n    // table: (props: any) => (\n    //     <table style={{ background: \"pink\" }} {...props} />\n    // ),\n    // tr: (props: any) => (\n    //     <tr style={{ background: \"pink\" }} {...props} />\n    // ),\n    // td: (props: any) => (\n    //     <td style={{ background: \"pink\" }} {...props} />\n    // ),\n}\n\nexport default function Layout(props: { children }) {\n    return (\n        <div>\n            <Navigation />\n            <MDXProvider components={markdownRenderers}>{props.children}</MDXProvider>\n        </div>\n    )\n}","// import type { HeadFC, PageProps } from \"gatsby\"\n// import * as React from \"react\"\n\n// const pageStyles = {\n//   color: \"#232129\",\n//   padding: 96,\n//   fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n// }\n// const headingStyles = {\n//   marginTop: 0,\n//   marginBottom: 64,\n//   maxWidth: 320,\n// }\n// const headingAccentStyles = {\n//   color: \"#663399\",\n// }\n// const paragraphStyles = {\n//   marginBottom: 48,\n// }\n// const codeStyles = {\n//   color: \"#8A6534\",\n//   padding: 4,\n//   backgroundColor: \"#FFF4DB\",\n//   fontSize: \"1.25rem\",\n//   borderRadius: 4,\n// }\n// const listStyles = {\n//   marginBottom: 96,\n//   paddingLeft: 0,\n// }\n// const doclistStyles = {\n//   paddingLeft: 0,\n// }\n// const listItemStyles = {\n//   fontWeight: 300,\n//   fontSize: 24,\n//   maxWidth: 560,\n//   marginBottom: 30,\n// }\n\n// const linkStyle = {\n//   color: \"#8954A8\",\n//   fontWeight: \"bold\",\n//   fontSize: 16,\n//   verticalAlign: \"5%\",\n// }\n\n// const docLinkStyle = {\n//   ...linkStyle,\n//   listStyleType: \"none\",\n//   display: `inline-block`,\n//   marginBottom: 24,\n//   marginRight: 12,\n// }\n\n// const descriptionStyle = {\n//   color: \"#232129\",\n//   fontSize: 14,\n//   marginTop: 10,\n//   marginBottom: 0,\n//   lineHeight: 1.25,\n// }\n\n// const docLinks = [\n//   {\n//     text: \"TypeScript Documentation\",\n//     url: \"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\",\n//     color: \"#8954A8\",\n//   },\n//   {\n//     text: \"GraphQL Typegen Documentation\",\n//     url: \"https://www.gatsbyjs.com/docs/how-to/local-development/graphql-typegen/\",\n//     color: \"#8954A8\",\n//   }\n// ]\n\n// const badgeStyle = {\n//   color: \"#fff\",\n//   backgroundColor: \"#088413\",\n//   border: \"1px solid #088413\",\n//   fontSize: 11,\n//   fontWeight: \"bold\",\n//   letterSpacing: 1,\n//   borderRadius: 4,\n//   padding: \"4px 6px\",\n//   display: \"inline-block\",\n//   position: \"relative\" as \"relative\",\n//   top: -2,\n//   marginLeft: 10,\n//   lineHeight: 1,\n// }\n\n// const links = [\n//   {\n//     text: \"Tutorial\",\n//     url: \"https://www.gatsbyjs.com/docs/tutorial/getting-started/\",\n//     description:\n//       \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\n//     color: \"#E95800\",\n//   },\n//   {\n//     text: \"How to Guides\",\n//     url: \"https://www.gatsbyjs.com/docs/how-to/\",\n//     description:\n//       \"Practical step-by-step guides to help you achieve a specific goal. Most useful when you're trying to get something done.\",\n//     color: \"#1099A8\",\n//   },\n//   {\n//     text: \"Reference Guides\",\n//     url: \"https://www.gatsbyjs.com/docs/reference/\",\n//     description:\n//       \"Nitty-gritty technical descriptions of how Gatsby works. Most useful when you need detailed information about Gatsby's APIs.\",\n//     color: \"#BC027F\",\n//   },\n//   {\n//     text: \"Conceptual Guides\",\n//     url: \"https://www.gatsbyjs.com/docs/conceptual/\",\n//     description:\n//       \"Big-picture explanations of higher-level Gatsby concepts. Most useful for building understanding of a particular topic.\",\n//     color: \"#0D96F2\",\n//   },\n//   {\n//     text: \"Plugin Library\",\n//     url: \"https://www.gatsbyjs.com/plugins\",\n//     description:\n//       \"Add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.\",\n//     color: \"#8EB814\",\n//   },\n//   {\n//     text: \"Build and Host\",\n//     url: \"https://www.gatsbyjs.com/cloud\",\n//     badge: true,\n//     description:\n//       \"Now youâ€™re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!\",\n//     color: \"#663399\",\n//   },\n// ]\n\n// const IndexPage: React.FC<PageProps> = () => {\n//   return (\n//     <main style={pageStyles}>\n//       <h1 style={headingStyles}>\n//         Congratulations\n//         <br />\n//         <span style={headingAccentStyles}>â€” you just made a Gatsby site! ðŸŽ‰ðŸŽ‰ðŸŽ‰</span>\n//       </h1>\n//       <p style={paragraphStyles}>\n//         Edit <code style={codeStyles}>src/pages/index.tsx</code> to see this page\n//         update in real-time. ðŸ˜Ž\n//       </p>\n//       <ul style={doclistStyles}>\n//         {docLinks.map(doc => (\n//           <li key={doc.url} style={docLinkStyle}>\n//             <a\n//               style={linkStyle}\n//               href={`${doc.url}?utm_source=starter&utm_medium=ts-docs&utm_campaign=minimal-starter-ts`}\n//             >\n//               {doc.text}\n//             </a>\n//           </li>\n//         ))}\n//       </ul>\n//       <ul style={listStyles}>\n//         {links.map(link => (\n//           <li key={link.url} style={{ ...listItemStyles, color: link.color }}>\n//             <span>\n//               <a\n//                 style={linkStyle}\n//                 href={`${link.url}?utm_source=starter&utm_medium=start-page&utm_campaign=minimal-starter-ts`}\n//               >\n//                 {link.text}\n//               </a>\n//               {link.badge && (\n//                 <span style={badgeStyle} aria-label=\"New Badge\">\n//                   NEW!\n//                 </span>\n//               )}\n//               <p style={descriptionStyle}>{link.description}</p>\n//             </span>\n//           </li>\n//         ))}\n//       </ul>\n//       <img\n//         alt=\"Gatsby G Logo\"\n//         src=\"data:image/svg+xml,%3Csvg width='24' height='24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2a10 10 0 110 20 10 10 0 010-20zm0 2c-3.73 0-6.86 2.55-7.75 6L14 19.75c3.45-.89 6-4.02 6-7.75h-5.25v1.5h3.45a6.37 6.37 0 01-3.89 4.44L6.06 9.69C7 7.31 9.3 5.63 12 5.63c2.13 0 4 1.04 5.18 2.65l1.23-1.06A7.959 7.959 0 0012 4zm-8 8a8 8 0 008 8c.04 0 .09 0-8-8z' fill='%23639'/%3E%3C/svg%3E\"\n//       />\n//     </main>\n//   )\n// }\n\n// export default IndexPage\n\n// export const Head: HeadFC = () => <title>Home Page</title>\n\nimport React from \"react\"\nimport Layout from \"../components/layout\"\n\nexport default function Home() {\n  return (\n    <Layout>\n      <h1>Iâ€™m in a layout!</h1>\n    </Layout>\n  )\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means itâ€™s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["Navigation","data","useStaticQuery","POST_INDEX_QUERY","___EmotionJSX","allMdx","_data$allMdx","edges","map","post","Link","to","node","frontmatter","slug","markdownRenderers","Layout","props","MDXProvider","components","children","Home","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}